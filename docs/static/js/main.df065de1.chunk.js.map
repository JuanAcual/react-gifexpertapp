{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";+LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACG,0BAAMC,SAVY,SAAAC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACGO,KAAK,OACLC,MAAQT,EACRU,SAhBiB,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,Y,gzMCNlD,IAAMG,EAAO,uCAAG,WAAOC,GAAP,sFAEdC,EAFc,iDAEkCC,UAAUF,GAF5C,+DAGDG,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAcbM,GAda,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACG,yBAAKc,UAAU,0CACZ,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHDO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEvB,ECHyB,SAACA,GAE1B,MAA0Bd,mBAAS,CAChCoB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACPvB,EAAQC,GACJuB,MAAK,SAAAC,GAEHH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGlB,CAACnB,IAEGoB,EDf0BK,CAAazB,GAAjCY,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACG,oCACG,wBAAIJ,UAAU,0CAA0Cf,GAEtDmB,GAAW,uBAAGJ,UAAU,yCAAb,cAEb,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACGiB,IAAKjB,EAAIC,IACLD,UEfV,SAASkB,IAErB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACG,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEMS,EAAWc,KAAI,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACG0B,IAAM1B,EACNA,SAAWA,S,MCZhC4B,IAASC,OACN,kBAAC,IAAMC,WAAP,KACG,kBAACH,EAAD,OAEHI,SAASC,eAAe,U","file":"static/js/main.df065de1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = e => setInputValue(e.target.value);\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(categories => [inputValue, ...categories]);\r\n         setInputValue('');\r\n      }\r\n   }; \r\n\r\n   return (\r\n      <form onSubmit={ handleSubmit }>\r\n         <input \r\n            type='text' \r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3OQH0dS734mTqqQoICWMILKg1BR7TnDy`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   });\r\n\r\n   return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n   return (\r\n      <div className='card animate__animated animate__fadeIn'>\r\n         <img src={ url } alt={ title } />\r\n         <p>{ title }</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data:images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className='card animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n         { loading && <p className='card animate__animated animate__flash'>Loading...</p> }\r\n\r\n         <div className='card-grid'>\r\n            {\r\n               images.map(img => (\r\n                  <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                  />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category)\r\n         .then(imgs => {\r\n\r\n            setState({\r\n               data: imgs,\r\n               loading: false\r\n            });\r\n         });\r\n   }, [category]);\r\n\r\n   return state;\r\n};","import React, { useState } from 'react'\r\nimport { AddCategory } from './componets/AddCategory';\r\nimport { GifGrid } from './componets/GifGrid';\r\n\r\nexport default function GifExpertApp() {\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={ setCategories } />\r\n         <hr />\r\n\r\n         <ol>\r\n            {\r\n               categories.map(category =>\r\n                  <GifGrid \r\n                     key={ category }\r\n                     category={ category }\r\n                  />\r\n               )\r\n            }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\n\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <GifExpertApp />\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}